name: 'npm-install'
description: >-
  A composite action to install and cache node modules.
inputs:
  package-dir-path:
    description: 'Path of dir with package.json.'
    required: true
    default: '.'
  modules-dir:
    description: 'Path of node_modules dir.'
  cache-key:
    description: 'The cache key.'
outputs:
  modules-dir:
    description: 'Path of node_modules dir.'
    value: '${{ steps.vars.outputs.modules-dir }}'
  cache-key:
    description: 'The cache key.'
    value: '${{ steps.vars.outputs.cache-key }}'
runs:
  using: 'composite'
  steps:
    - name: 'Set vars ðŸ”‘'
      id: 'vars'
      shell: 'bash'
      run: |-
        if [ -n "${{ inputs.modules-dir }}" ]; then
          echo "modules-dir=${{ inputs.modules-dir }}" >> "$GITHUB_OUTPUT"
        else
          echo "modules-dir=${{ inputs.package-dir-path }}/node_modules" \
            >> "$GITHUB_OUTPUT"
        fi

        if [ -n "${{ inputs.cache-key }}" ]; then
          echo "cache-key=${{ inputs.cache-key }}" >> "$GITHUB_OUTPUT"
        else
          ci_env="${{ runner.os }}-${{ runner.arch }}"
          versions="node_$(node --version)-npm_v$(npm --version)"
          hash="${{ hashFiles('${{ inputs.package-dir-path }}/package-lock.json') }}"

          echo "cache-key=node_modules-$ci_env-$versions-$hash" \
            >> "$GITHUB_OUTPUT"
        fi

    - name: 'Restore node modules ðŸ§©'
      uses: 'actions/cache/restore@v3'
      id: 'restore-cache'
      with:
        key: '${{ steps.vars.outputs.cache-key }}'
        path: '${{ steps.vars.outputs.modules-dir }}'

    - name: 'Install node modules ðŸ“¥'
      shell: 'bash'
      run: 'npm install'

    - name: 'Cache node modules ðŸ§©'
      uses: 'actions/cache/save@v3'
      id: 'save-cache'
      with:
        key: '${{ steps.vars.outputs.cache-key }}'
        path: '${{ steps.vars.outputs.modules-dir }}'
